<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize object variables

//The music stream variable for the overworld map music
mapmusic = noone;

//The name of the file to load, located in folder "music/"
filename = "";

//Volume to play the song, pulled from ini file
myvolume = 0;

//Value used by the FMOD scripts to play the song at the specified volume//
songvolume = 0;

//Music loop start point
myloopS = 0;

//Music loop end point
myloopE = 0;

//Forces the room to play its specified music (TRUE)
music_init = false;

//Changes the music when the room is exited
music_change = false;

//The song group to play the music (as noted above)
songgroup = 0;

//Checked at the beginning of the room to play a song no matter what
forceplay = false;

//No music?
nomusic = false;

//So that the map BGM plays only once
mapmusicinit = false;

//Don't know if this will be used
musicdisable = false;

//For fading in the music volume upon resum
mapmusicvol = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade in music volume on resume

//While volume is less than 100% (value of 1)
if (mapmusicvol &lt; 1) { 

    //Set music volume accordingly
    FMODInstanceSetVolume(global._stream_map, mapmusicvol);
    
    //Increment music volume by a bit
    mapmusicvol += 0.005;

    //Repeat this alarm
    alarm[11] = 2;
}
else {

    //Set it to the default value of 1 just in case
    mapmusicvol = 1; 
    
    //Set music volume to maximum
    FMODInstanceSetVolume(global._stream_map, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop overworld map BGM

if (FMODInstanceIsPlaying(global._stream_map)) {

    FMODInstanceStop(global._stream_map);
    global._stream_map = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resume play of the overworld map BGM

FMODInstanceSetPaused(global._stream_map, false);

//set music volume to 0 for fade in effect
FMODInstanceSetVolume(global._stream_map, 0);
mapmusicvol = 0; //Set music volume variable to 0

//Start volume fade-in alarm
alarm[11] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause the overworld map BGM

FMODInstanceSetPaused(global._stream_map, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start the map music playing

//Deny if the map music has already been started
if (mapmusicinit)
exit;

//Play this particular instance of the map music only once until further notice
if (mapmusicinit == false)
mapmusicinit = true;

//Deny if music has been disabled.
if (musicdisable)
exit;

//Play new stream
global._stream_map = FMODSoundLoop(mapmusic, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deinitialize FMOD system

UnloadFMOD();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize FMOD system

LoadFMOD();
FMODinit(32, false);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize music streams

/*
// INSTRUCTIONS ABOUT ADDING MUSIC ON THE ENGINE.
//
// 1. Add the music file on the music folder under "Included Files".
//
// 2. Then add the global variable with the following data.
//
//      - Group
//          - 0: Title Music
//          - 1: Map
//          - 2: Events (Toad Houses, Minigames)
//          - 3: Level Music
//          - 4: P-switch music
//
//      - Volume (I recommend setting it to 0.7 so you can hear the sound files included on the engine.)
//
//      - Loop Point (If the song does have a loop point, here's how you can get it. (I recommend the use of Audacity to do this.)
//          1. At the bottom of the screen, set the timing to samples.
//          2. Calculate the position of the start of the loop and the end of the loop, I recommend setting it in samples.
//          3. Once you're done with step 2, divide the start loop with the end loop. This will return the value you must use with FMODSoundSetLoopPoints().
//
//  3. To use it, just call the global variable you added before on "obj_levelmanger" and you're done.
*/

//Open SMFMUSIC.INI for reading
ini_open("gmemusicini.ini");

//Main stream control
global._stream = -1;

//Overworld map BGM stream control
global._stream_map = -1;

//Initialize all music variables
init_globals_music()

//Close SMFMUSIC.INI after using it
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
